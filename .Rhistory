ggplot(aes(y=GAG)) +
geom_point(aes(x=Age))+
geom_smooth(aes(x=Age, y=GAG),method = 'gam')+
theme(panel.background = element_rect(fill='linen'))
df %>%
ggplot(aes(y=GAG)) +
geom_point(aes(x=Age), cex=2, color='red')+
geom_smooth(aes(x=Age, y=GAG),method = 'gam')+
theme(panel.background = element_rect(fill='linen'))
df %>%
ggplot(aes(y=GAG)) +
geom_point(aes(x=Age), cex=2, color='darkred', pch=23)+
geom_smooth(aes(x=Age, y=GAG),method = 'gam')+
theme(panel.background = element_rect(fill='linen'))
df %>%
ggplot(aes(y=GAG)) +
geom_point(aes(x=Age), cex=2, color='darkred', pch=22)+
geom_smooth(aes(x=Age, y=GAG),method = 'gam')+
theme(panel.background = element_rect(fill='linen'))
df %>%
ggplot(aes(y=GAG)) +
geom_point(aes(x=Age), cex=2, color='darkred', pch=18)+
geom_smooth(aes(x=Age, y=GAG),method = 'gam')+
theme(panel.background = element_rect(fill='linen'))
df %>%
ggplot(aes(y=GAG)) +
geom_point(aes(x=Age), cex=2, color='darkred', pch=19)+
geom_smooth(aes(x=Age, y=GAG),method = 'gam')+
theme(panel.background = element_rect(fill='linen'))
set.seed(45)
tr = 0.8*nrow(df)
tr = 0.8*round(nrow(df),0)
tr = 0.8*round(nrow(df))
tr = round(0.8*nrow(df))
tr = sample(nrow(df), tr, replace=F)
tr = round(0.8*nrow(df))
treino = sample(nrow(df), tr, replace=F)
df_treino = df[treino, ]
df_teste = df[-treino, ]
lm(GAG ~ Age, df_treino)
lm(GAG ~ poly(Age, 1), df_treino)
lm(GAG ~ poly(Age, 0), df_treino)
lm(GAG ~ poly(Age, 1, raw = T), df_treino)
assign(x, 1)
assign('x', 1)
for (o in 1:5) {
m1 = lm(GAG ~ poly(Age, o, raw = T), df_treino)
assign(paste('lm', o), m1)
}
rm(lm 1)
df = GAGurine
df = as_tibble(df)
set.seed(45)
tr = round(0.8*nrow(df))
# amostra ----
treino = sample(nrow(df), tr, replace=F)
# Treino e teste ----
df_treino = df[treino, ]
df_teste = df[-treino, ]
# regressão polinomial ----
for (o in 1:5) {
m1 = lm(GAG ~ poly(Age, o, raw = T), df_treino)
assign(paste('lm', o, , sep=''), m1)
}
for (o in 1:5) {
m1 = lm(GAG ~ poly(Age, o, raw = T), df_treino)
assign(paste('lm', o, sep=''), m1)
}
anova(lm1, lm2, lm3, lm4, lm5)
summary(lm5)
x = seq(min(df$Age), max(df$Age), 100)
y_hat = predict(lm5, newdata = data.frame(x), interval = 'confidence')
x = seq(min(df$Age), max(df$Age), 100)
y_hat = predict(lm5, newdata = data.frame(x), interval = 'confidence')
y_hat = predict(lm5, newdata = data.frame(Age= x), interval = 'confidence')
lines(x, y_hat[,1])
plot(GAG, Age, data=df)
df
plot(GAG, Age, data=df)
plot(df$GAG, df$Age, data=df)
plot(df$GAG, df$Age)
plot(df$GAG, df$Age, pch=19)
plot(df$GAG, df$Age, pch=19, col='darkred')
plot(GAG~Age, treino, pch=19, col='darkred')
plot(GAG~Age, df_treino, pch=19, col='darkred')
plot(GAG~Age, df_treino, pch=19, col='red3')
lines(x, y_hat[,1])
plot(GAG~Age, df_treino, pch=19, col='red3')
lines(x, y_hat[,1], col='seagreen', lwd=2)
View(y_hat)
x = seq(min(df$Age), max(df$Age), 100)
min(df$Age)
max(df$Age)
seq(min(df$Age), max(df$Age), 100)
x = seq(min(df$Age), max(df$Age), lenght=100)
x = seq(min(df$Age), max(df$Age), lengtht=100)
x = seq(min(df$Age), max(df$Age), length=100)
y_hat = predict(lm5, newdata = data.frame(Age= x), interval = 'confidence')
plot(GAG~Age, df_treino, pch=19, col='red3')
lines(x, y_hat[,1], col='seagreen', lwd=2)
matlines(x, y_hat[,2:3], col='lightseagreen', lwd=1, lty = 2)
step1 = lm(GAG~cut(Age), data=df_treino)
step1 = lm(GAG~cut(Age, 4), data=df_treino)
summary(step1)
y_hat_step = predict(step1,newdata = data.frame(Age=x), interval = 'confidence' )
plot(GAG~Age, df_treino, pch=20, col='red3')
lines(x, y_hat_step[,1], col='seagreen', lwd=2)
matlines(x, y_hat_step[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
summary(step1)
View(y_hat_step)
18.828-11.044
cut(df$Age, 4)
summary(step1)
library(splines)
sp1 = lm(GAG~bs(Age, knots = c(4.42, 8.84, 13.3)), df_treino)
summary(sp1)
summary(sp1)
y_hat_sp1 = predict(sp1, newdata = data.frame(Age=x), interval = 'confidence' )
plot(GAG~Age, df_treino, pch=20, col='red3')
lines(x, y_hat_sp1[,1], col='seagreen', lwd=2)
matlines(x, y_hat_sp1[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
abline(v= attr(bs(Age, knots = c(4.42, 8.84, 13.3))), col='gray', lty=2 )
abline(v= attr(bs(df_treino$Age, knots = c(4.42, 8.84, 13.3))), col='gray', lty=2 )
bs(df_treino$Age, knots = c(4.42, 8.84, 13.3))
abline(v = attr(bs(df_treino$Age, knots = c(4.42, 8.84, 13.3)), 'knots' ), col='gray', lty=2 )
bs(df_treino$Age, knots = c(4.42, 8.84, 13.3))
attr(bs(df_treino$Age, knots = c(4.42, 8.84, 13.3)), 'knots')
bs(df_treino$Age, knots = c(4.42, 8.84, 13.3))
bs(df_treino$Age, knots = c(4.42, 8.84, 13.3))[1]
bs(df_treino$Age, knots = c(4.42, 8.84, 13.3))
a=bs(df_treino$Age, knots = c(4.42, 8.84, 13.3))
View(a)
knot = c(4.42, 8.84, 13.3)
x_k1 = df - knot[1]
x_k1[x_k1<0] = 0
x_k2 =df - knot[2]
x_k2[x_k2<0] = 0
x_k3 = df - knot[3]
x_k3[x_k3<0] = 0
my_sp = lm(GAG ~ Age + I(Age^2) + I(Age^3) +
I(x_k1^1) + I(x_k2^2) + I(x_k3^3))
my_sp = lm(GAG ~ Age + I(Age^2) + I(Age^3) +
I(x_k1^1) + I(x_k2^2) + I(x_k3^3), df)
my_sp = lm(GAG ~ Age + I(Age^2) + I(Age^3) +
I(x_k1^1) + I(x_k2^2) + I(x_k3^3), df)
my_sp = lm(GAG ~ Age + I(Age^2) + I(Age^3) +
I(x_k1) + I(x_k2^2) + I(x_k3^3), df)
x_k1 = df - knot[1]
x_k1[x_k1<0] = 0
my_sp = lm(GAG ~ Age + I(Age^2) + I(Age^3) +
I(x_k1) + I(x_k2^2) + I(x_k3^3), df)
str(x_k1)
View(x_k1)
x_k1 = df$Age - knot[1]
x_k1[x_k1<0] = 0
x_k2 = df$Age - knot[2]
x_k2[x_k2<0] = 0
x_k3 = df$Age - knot[3]
x_k3[x_k3<0] = 0
my_sp = lm(GAG ~ Age + I(Age^2) + I(Age^3) +
I(x_k1) + I(x_k2^2) + I(x_k3^3), df)
summary(my_sp)
summary(sp1)
summary(my_sp)
my_sp = lm(GAG ~ Age + I(Age^2) + I(Age^3) +
I(x_k1^3) + I(x_k2^3) + I(x_k3^3), df)
summary(my_sp)
90/4
library(MASS)
data(GAGurine)
library(tidyverse)
df = GAGurine
df = as_tibble(df)
df %>%
ggplot(aes(y=GAG)) +
geom_point(aes(x=Age), cex=2, color='darkred', pch=19)+
geom_smooth(aes(x=Age, y=GAG),method = 'gam')+
theme(panel.background = element_rect(fill='linen'))
set.seed(45)
# tamanho do treino ----
tr = round(0.8*nrow(df))
# amostra ----
treino = sample(nrow(df), tr, replace=F)
# Treino e teste ----
df_treino = df[treino, ]
df_teste = df[-treino, ]
# regressão polinomial ----
for (o in 1:5) {
m1 = lm(GAG ~ poly(Age, o, raw = T), df_treino)
assign(paste('lm', o, sep=''), m1)
}
anova(lm1, lm2, lm3, lm4, lm5)
summary(lm5)
# forecast com reg polinomial -----
x = seq(min(df$Age), max(df$Age), length=100)
y_hat = predict(lm5, newdata = data.frame(Age= x), interval = 'confidence')
plot(GAG~Age, df_treino, pch=19, col='red3')
lines(x, y_hat[,1], col='seagreen', lwd=2)
matlines(x, y_hat[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
# step function -----
step1 = lm(GAG~cut(Age, 4), data=df_treino) # cut gera um fator, logo as variáveis são dummies
summary(step1)
y_hat_step = predict(step1,newdata = data.frame(Age=x), interval = 'confidence' )
plot(GAG~Age, df_treino, pch=20, col='red3')
lines(x, y_hat_step[,1], col='seagreen', lwd=2)
matlines(x, y_hat_step[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
# Splines - polinômios por partes -----
library(splines)
sp1 = lm(GAG~bs(Age, knots = c(4.42, 8.84, 13.3)), df_treino)
summary(sp1)
y_hat_sp1 = predict(sp1, newdata = data.frame(Age=x), interval = 'confidence' )
plot(GAG~Age, df_treino, pch=20, col='red3')
lines(x, y_hat_sp1[,1], col='seagreen', lwd=2)
matlines(x, y_hat_sp1[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
abline(v = attr(bs(df_treino$Age, knots = c(4.42, 8.84, 13.3)), 'knots'), col='gray', lty=2 )
# criando a spline ----
knot = c(4.42, 8.84, 13.3)
x_k1 = df$Age - knot[1]
x_k1[x_k1<0] = 0
x_k2 = df$Age - knot[2]
x_k2[x_k2<0] = 0
x_k3 = df$Age - knot[3]
x_k3[x_k3<0] = 0
my_sp = lm(GAG ~ Age + I(Age^2) + I(Age^3) +
I(x_k1^3) + I(x_k2^3) + I(x_k3^3), df)
summary(my_sp)
sp_nat = lm(GAG ~ ns(Age, df=5), df)
summary(sp_nat)
y_hat_nat = predict(sp_nat, newdata = data.frame(Age=x), interval = 'confidence' )
plot(GAG~Age, df_treino, pch=20, col='red3')
lines(x, y_hat_nat[,1], col='seagreen', lwd=2)
matlines(x, y_hat_nat[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
#
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Natural Spline')
lines(x, y_hat_nat[,1], col='seagreen', lwd=2)
matlines(x, y_hat_nat[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
sp_nat = lm(GAG ~ ns(Age, df = 6), df)
summary(sp_nat)
y_hat_nat = predict(sp_nat, newdata = data.frame(Age=x), interval = 'confidence' )
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Natural Spline')
lines(x, y_hat_nat[,1], col='seagreen', lwd=2)
matlines(x, y_hat_nat[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
abline(v = attr(ns(df$Age, df = 6), 'knots'), col='gray', lty=2 )
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Natural Spline', cex=1.5)
lines(x, y_hat_nat[,1], col='seagreen', lwd=2)
matlines(x, y_hat_nat[,2:3], col='lightseagreen', lwd=1, lty = 2) #plota duas colunas
abline(v = attr(ns(df$Age, df = 6), 'knots'), col='gray', lty=2 )
attach(df_treino)
ssm1 = smooth.spline(Age, GAG, df=30)
ssm2 = smooth.spline(Age, GAG, cv = T, penalty = 1 )
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssp1,  col = 'navy', lwd = 2, lty = 2)
lines(ssp2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df ', round(ssm2$df, 2), 'LOO' ), 'df = 30')
)
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 2, lty = 2)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df ', round(ssm2$df, 2), ' LOO' ), 'df = 30')
)
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 2, lty = 2)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30')
)
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 2, lty = 2)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'))
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 2, lty = 2)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lwd = 2)
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 2, lty = 2)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lwd = 4)
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 4, lty = 2)
lines(ssm2,  col = 'seagreen', lwd = 4)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lwd = 4)
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 4, lty = 3)
lines(ssm2,  col = 'seagreen', lwd = 4)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lwd = 4)
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 4, lty = 4)
lines(ssm2,  col = 'seagreen', lwd = 4)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lwd = 4)
plot(GAG~Age, df_treino, pch=20, col='red3', main = 'Smooth Spline', cex=1.5)
lines(ssm1,  col = 'navy', lwd = 4, lty = 4)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lwd = 4)
plot(GAG~Age, df_treino, pch=20, col='red', main = 'Smooth Spline', cex=1.1)
lines(ssm1,  col = 'navy', lwd = 4, lty = 4)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lwd = 4)
plot(GAG~Age, df_treino, pch=20, col='red', main = 'Smooth Spline', cex=1.1)
lines(ssm1,  col = 'navy', lwd = 4, lty = 2)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lty=1:2, lwd = 4)
plot(GAG~Age, df_treino, pch=20, col='red', main = 'Smooth Spline', cex=1.1)
lines(ssm1,  col = 'navy', lwd = 4, lty = 2)
lines(ssm2,  col = 'seagreen', lwd = 2)
legend('topright', legend = c(paste0('df = ', round(ssm2$df, 2) ), 'df = 30'),
col = c('seagreen', 'navy'), lty=1:2, lwd = 4)
loc1 = loess(GAG ~ Age, span = 0.1, df_treino)
loc2 = loess(GAG ~ Age, span = 0.5, df_treino)
summary(loc2)
y_hat_loc1 = predict(loc1, newdata = data.frame(Age=x), interval = 'confidence' )
y_hat_loc2 = predict(loc2, newdata = data.frame(Age = x), interval = 'confidence' )
plot(GAG ~ Age, df_treino, pch=20, col='red', main = 'Local regression', cex=1.1)
lines(x, y_hat_loc1, col = 'navy', lwd = 4, lty = 2 )
lines(x, y_hat_loc2, col = 'seagreen', lwd = 4)
legend('topright', legend = c('span = 0.1', 'span = 0.5'),
col = c('seagreen', 'navy'), lty=1:2, lwd = 4)
plot(GAG ~ Age, df_treino, pch=20, col='red', main = 'Local regression', cex=1.1)
lines(x, y_hat_loc1, col = 'navy', lwd = 4, lty = 2 )
lines(x, y_hat_loc2, col = 'seagreen', lwd = 4)
legend('topright', legend = c('span = 0.1', 'span = 0.5'),
col = c('navy', 'seagreen'), lty=1:2, lwd = 4)
plot(GAG ~ Age, df_treino, pch=20, col='red', main = 'Local regression', cex=1.1)
lines(x, y_hat_loc1, col = 'navy', lwd = 4, lty = 2 )
lines(x, y_hat_loc2, col = 'seagreen', lwd = 4)
legend('topright', legend = c('span = 0.1', 'span = 0.5'),
col = c('navy', 'seagreen'), lty=2:1, lwd = 4)
loc1_t = predict(loc1, newdata = df_treino)
loc2_t = predict(loc2, newdata = df_treino)
sp_nat_t = predict(sp_nat, newdata = df_treino)
ssm1_t = predict(ssm1, newdata = df_treino)
ssm2_t = predict(ssm2, newdata = df_treino)
sp1_t = predict(sp1, newdata = df_treino)
lm5_t = predict(lm5, newdata = df_treino)
step1_t = predict(step1, newdata = df_treino)
library(caret)
loc1_t
t1 = data.frame(obs = df_teste$GAG, pred = loc1_t )
t2 = data.frame(obs = df_teste$GAG, pred = loc2_t )
t3 = data.frame(obs = df_teste$GAG, pred = sp_nat_t )
t4 = data.frame(obs = df_teste$GAG, pred = sp1_t )
t5 = data.frame(obs = df_teste$GAG, pred = lm5_t )
t6 = data.frame(obs = df_teste$GAG, pred = step1_t )
t1 = data.frame(obs = df_treino$GAG, pred = loc1_t )
t2 = data.frame(obs = df_treino$GAG, pred = loc2_t )
t3 = data.frame(obs = df_treino$GAG, pred = sp_nat_t )
t4 = data.frame(obs = df_treino$GAG, pred = sp1_t )
t5 = data.frame(obs = df_treino$GAG, pred = lm5_t )
t6 = data.frame(obs = df_treino$GAG, pred = step1_t )
res_t = data.frame(
loc1 = defaultSummary(t1),
loc2 = defaultSummary(t2),
sp_nat = defaultSummary(t3),
sp1 = defaultSummary(t4),
lm5 = defaultSummary(t5),
step1 = defaultSummary(t6),
)
defaultSummary(t1)
defaultSummary(t2)
res_t = data.frame(
loc1 = defaultSummary(t1),
loc2 = defaultSummary(t2),
sp_nat = defaultSummary(t3),
sp1 = defaultSummary(t4),
lm5 = defaultSummary(t5),
step1 = defaultSummary(t6)
)
res_t
4*4
16/15
(16/15)*1350
1350 + (4/3)*1350
8*7*9*5
0.5^2
18/0.25
d = seq(1, 10)
cut(d, c(1, 5, 10))
cut(d, c(0, 5, 10))
a = cut(d, c(0, 5, 10))
d = seq(1, 100)
a = cut(d, c(0, 50, 100))
b = rnorm(100)
lm(b~a)
a = cut(d, c(0, 25, 50, 100))
lm(b~a)
reg = lm(b ~ a)
summary(reg)
library('olsrr')
reg = ols_regress(b ~ a)
df = data.frame(a, b)
reg = ols_regress(b ~ a, data=df)
summary(reg)
reg
install.packages('vdem.data')
install.packages('vdemdata')
df <- readRDS("C:/Users/user/Downloads/vdem/Country_Year_V-Dem_Full+others_R_v11.1/V-Dem-CY-Full+Others-v11.1.rds")
View(df)
df %>%
filter(country=='France')
library(tidyverse)
df %>%
filter(country=='France')
df %>%
filter(country_name=='France')
fr = df %>%
filter(country_name=='France')
colnames(fr)
View(fr)
fr %>%
select(e_migdpgro)
fr %>%
select(e_migdpgro, year) %>%
ggplot( aes(y=e_migdpgro, x=year) ) +
geom_line()
fr %>%
select(e_migdpgrolns, year) %>%
ggplot( aes(y=e_migdpgrolns, x=year) ) +
geom_line()
fr %>%
select(e_migdppc, year) %>%
ggplot( aes(y=e_migdppc, x=year) ) +
geom_line()
df %>%
filter(country_name=='Brazil')
br = df %>%
filter(country_name=='Brazil')
br %>%
select(e_migdppc, year) %>%
ggplot( aes(y=e_migdppc, x=year) ) +
geom_line()
fr %>%
select(e_miinflat, year) %>%
ggplot( aes(y=e_miinflat, x=year) ) +
geom_line()
ss =  c(0, 1)
for (o in 3:30) {
ss[o] = (ss[o-2]+ss[o-1])
}
ss
21/13
ss
rd = c()
for (o in 2:30) {
rd[o] = rd[o]/rd[o-1]
}
rd
rd = c()
for (o in 2:30) {
rd[o] = rd[o]/rd[o-1]
}
rd = c()
for (o in 3:30) {
rd[o] = rd[o]/rd[o-1]
}
for (o in 3:30) {
rd[o] = ss[o]/ss[o-1]
}
rd
plot(seq(1, 30), rd)
plot(seq(1, 30), rd, type = 'b')
plot(seq(1, 30), rd, type = 'b', col='navy')
plot(seq(1, 30), rd, type = 'b', col='navy', pch=19)
plot(seq(1, 30), rd, type = 'b', col='navy', pch=19,
main='Olá Chichia')
plot(seq(1, 30), rd, type = 'b', col='navy', pch=19,
main='Olá Chichia', ylab='chichia', xlab='cuecão')
devtools::install_github("lucasmation/microdadosBrasil")
library('microdadosBrasil')
download_sourceData("PNAD", 2002, unzip = T)
d  <- read_PNAD("domicilios", 2002)
d2 <- read_PNAD("pessoas", 2002)
View(d2)
`pnad-2002` <- readRDS("C:/Users/user/Downloads/dados.pack/pnad-2002.rds")
View(`pnad-2002`)
download_sourceData("PNAD", 1993, unzip = T)
download_sourceData("PNAD", 1993, unzip = T)
library(devtools)
library(Microdados)
install_github("mj-ribeiro/Microdados")
pnad = Microdados::load_pnad(2002)
library(haven)
years = seq(2002, 2015)
years = years[years!=2010]
for (ii in 1:length(years)){
year = years[ii]
cat('Ano', years[ii], '\n')
pnad <- read_dta(paste("D:/Git projects/dados.pack/pnad", year, 'dom.dta', sep=''))
saveRDS(pnad, paste('dom', years[ii], '.rds', sep=''))
}
for (ii in 1:length(years)){
year = years[ii]
cat('Ano', years[ii], '\n')
pnad <- read_dta(paste("D:/PNADs/pnad_dom/pnad", year, 'dom.dta', sep=''))
saveRDS(pnad, paste('dom', years[ii], '.rds', sep=''))
}
setwd("D:/it projects/dados.pack")
setwd("D:/Git projects/dados.pack")
for (ii in 1:length(years)){
year = years[ii]
cat('Ano', years[ii], '\n')
pnad <- read_dta(paste("D:/PNADs/pnad_dom/pnad", year, 'dom.dta', sep=''))
saveRDS(pnad, paste('dom', years[ii], '.rds', sep=''))
}
library(Microdados)
